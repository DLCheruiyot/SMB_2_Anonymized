/* This is an Anonymization and Randomization Script meant to be applied to the bronze layer tables. */
-- NOTE: CSV not included in this repo. Replace path with local test file to run.


USE SMB_2_Anonymized;
GO

---------------------------------------------------------------------------------------------
-- Updating bronze.wd_order_details
---------------------------------------------------------------------------------------------
-- Step 1: Anonymize cust_first_name with synthetic values
UPDATE bronze.wd_order_details
SET cust_first_name = 'FirstName_' + RIGHT(CAST(ABS(CHECKSUM(NEWID())) AS VARCHAR), 4)
WHERE cust_first_name IS NOT NULL;

-- Step 2: Anonymize cust_last_name with synthetic values
UPDATE bronze.wd_order_details
SET cust_last_name = 'LastName_' + RIGHT(CAST(ABS(CHECKSUM(NEWID())) AS VARCHAR), 4)
WHERE cust_last_name IS NOT NULL;

-- Step 3: Anonymize cust_email to fake but consistent-looking emails
UPDATE bronze.wd_order_details
SET cust_email = 'user' + RIGHT(CAST(ABS(CHECKSUM(NEWID())) AS VARCHAR), 5) + '@example.com'
WHERE cust_email IS NOT NULL;

-- Step 4: Drop Sensitive Product Fields
ALTER TABLE bronze.wd_order_details DROP COLUMN prod_name;
ALTER TABLE bronze.wd_order_details DROP COLUMN prod_type;

-- Step 5: Randomize quantity between 1 and 12
UPDATE bronze.wd_order_details
SET quantity = (ABS(CHECKSUM(NEWID())) % 12) + 1
WHERE quantity IS NOT NULL;

---------------------------------------------------------------------------------------------
-- Updating bronze.facebook_data
---------------------------------------------------------------------------------------------
WITH RandomizedFacebookData AS (
    SELECT 
        facebook_date,
        -- Create a base random score between 1 and 100
        (ABS(CHECKSUM(NEWID())) % 100 + 1) AS base_score,
        ROW_NUMBER() OVER (ORDER BY facebook_date) AS row_num
    FROM bronze.facebook_data
)
UPDATE f
SET 
    facebook_follows = ROUND(r.base_score * 0.05, 0),                -- 0–5
    facebook_interactions = ROUND(r.base_score * 1.0, 0),            -- 1–100
    facebook_link_clicks = ROUND(r.base_score * 0.2, 0),             -- 0–20
    facebook_reach = ROUND(r.base_score * 90 + (ABS(CHECKSUM(NEWID())) % 100), 0),   -- ~100–9100
    facebook_visits = ROUND(r.base_score * 2.5, 0)                   -- ~2–250
FROM bronze.facebook_data f
JOIN RandomizedFacebookData r
ON f.facebook_date = r.facebook_date;

---------------------------------------------------------------------------------------------
-- Updating bronze.instagram_data
---------------------------------------------------------------------------------------------
WITH RandomizedInstagramData AS (
    SELECT 
        instagram_date,
        -- Base random score between 1 and 100
        (ABS(CHECKSUM(NEWID())) % 100 + 1) AS base_score,
        ROW_NUMBER() OVER (ORDER BY instagram_date) AS row_num
    FROM bronze.instagram_data
)
UPDATE i
SET 
    instagram_follows = ROUND(r.base_score * 0.05, 0),                -- 0–5
    instagram_interaction = ROUND(r.base_score * 1.0, 0),             -- 1–100
    instagram_link_clicks = ROUND(r.base_score * 0.2, 0),             -- 0–20
    instagram_reach = ROUND(r.base_score * 90 + (ABS(CHECKSUM(NEWID())) % 100), 0),  -- ~100–9100
    instagram_visits = ROUND(r.base_score * 2.5, 0)                   -- ~2–250
FROM bronze.instagram_data i
JOIN RandomizedInstagramData r
ON i.instagram_date = r.instagram_date;

---------------------------------------------------------------------------------------------
-- Updating bronze.mailchimp_email_marketing
---------------------------------------------------------------------------------------------
-- 1. Update email_title
-- Step: Drop email_title and email_subject columns from bronze.mailchimp_email_marketing
ALTER TABLE bronze.mailchimp_email_marketing
DROP COLUMN email_title, email_subject;

-- 2. Update email_audience
UPDATE bronze.mailchimp_email_marketing
SET email_audience = REPLACE(REPLACE(email_audience, 'Mellowood', 'Winery'), 'Fair Play', 'AVA')
WHERE email_audience LIKE '%Mellowood%' OR email_audience LIKE '%Fair Play%';

---------------------------------------------------------------------------------------------
-- Updating bronze.bank_transactions
---------------------------------------------------------------------------------------------
-- 1. Remove 'Expenses' records since we will be reporting on Revenue only
DELETE FROM bronze.bank_transactions
WHERE bank_transaction <> 'CREDIT';

-- 2. Replace specific personal names
UPDATE bronze.bank_transactions
SET bank_transaction_name = REPLACE(bank_transaction_name, 'MARIAM', 'CUSTOMER')
WHERE bank_transaction_name LIKE '%MARIAM%';

UPDATE bronze.bank_transactions
SET bank_transaction_name = REPLACE(bank_transaction_name, 'KARUGA', 'CUSTOMER')
WHERE bank_transaction_name LIKE '%KARUGA%';

-- 3. Replace brand-specific or business identifiers
UPDATE bronze.bank_transactions
SET bank_transaction_name = REPLACE(bank_transaction_name, 'MELLOWOODVIN', 'WINERYSITE')
WHERE bank_transaction_name LIKE '%MELLOWOODVIN%';

-- 4. Replace POS provider names if desired (optional)
-- For example, replace 'WayaPay Limited' with 'POS Provider'
UPDATE bronze.bank_transactions
SET bank_transaction_name = REPLACE(bank_transaction_name, 'WayaPay Limited', 'POS Provider')
WHERE bank_transaction_name LIKE '%WayaPay Limited%';

-- 4. Anonymize bank_memo field
UPDATE bronze.bank_transactions
SET bank_memo = 'Imported from BankFeed';

